/*переопределим положение 3-ей строки главного грида,
 что бы не по центру распологалась карусель, а по всем 3-м колонкам*/
.content{
    grid-column: span 4;
    min-width: 0;
}
.image-slider, .swiper-slide img{
	min-width: 320px;
    width: 100%;
    height: 100%;
}
/* для Mozilla иначе он не поймет какаю ширину выставить для слайдера */
.swiper-container {
  max-width: 100vw;
}
.services{
	background-color: #F7F7F7;
}
/* Нарисуем линию по бокам заголовка */
.title {
    /* Чтобы спрятать часть линий, которые 
    ** будут вылазить за пределы блока */
    overflow: hidden;
    /* Выравнивание заголовка по центру, 
    ** можно использовать left, right */
    text-align: center;
    /* Тут можно добавить другие стили для заголовка */
    font-size: 1.5rem;
    color: #555555;
    padding: 2rem 0 2rem 0;
}
.title span {
    /* Стили тега обертки для заголовков 
    ** в несколько строк */
    display: inline-block;
    vertical-align: middle;
}
.title:before,
.title:after {
    /* Обязательно указываем пустое свойство content, 
    ** иначе псевдоэлементы не появятся на сайте */
    content: "";
    /* Указываем что наши линии будут строчно-блочные и 
    ** выравнивание по высоте - по центру */
    display: inline-block;
    vertical-align: middle;
    /* Задаем ширину 10% и выбираем высоту линии, 
    ** в нашем примере она равна 4 пикселям */
    width: 10%;
    height: 4px;
    /* Добавляем цвет для линии */
    background-color: #BBB;
    /* Добавляем пседоэлемантам возможность изменить 
    ** позицию линии, для создания отступов от текста */
    position: relative;
}
.title:before {
    /* Смещаем левую линию на 100% влево, чтобы линия 
    ** встала рядом с текстом слева */
    margin-left: -100%;
    /* Указываем в пикселях отступ линии от текста заголовка */
    left: -14px;
}
.title:after {
    /* Смещаем правую линию на 100% вправо, чтобы 
    ** линия встала рядом с текстом справа */
    margin-right: -100%;
    /* Указываем в пикселях отступ линии от текста заголовка */
    right: -14px;
}
/* Определим грид для наших преимуществ */
.grid-advantages{
	display: grid;
	gap: 5%;
	padding: 0 20% 2rem 20%;
	grid-template-columns: repeat(3, minmax(200px, 1fr));
	grid-template-rows: 1fr;
	background-color: #FFF;
}
.advantages img{
	width: 100%;
	height: 100%;
}
@media (max-width: 768px){
	.grid-advantages{
		display: grid;
		gap: 1rem;
		padding: 0 20% 2rem 20%;
		grid-template-columns: minmax(200px, .6fr);
	}
}
/* дальше нужно определить гриды для сервисов */
.grid-services{
	display: grid;
	grid-template-columns: repeat(3, minmax(100px, 1fr));
	grid-template-rows: 1fr 1fr;
	padding: 0 20% 7rem 20%;
	gap: 5%;
}
@media (max-width: 768px){
	.grid-services{
		display: grid;
		grid-template-columns: minmax(100px, 1fr);
		padding: 0 10% 7rem 10%;
		gap: 0;
	}
}
/* и гриды для каждого элемента сервиса */
.grid-item-service{
	display: grid;
	grid-template-columns: 3rem 1fr;
	grid-template-rows: 1fr 1fr;
	align-items: center;
	column-gap: 1rem;
	row-gap: 2rem;
}
.grid-item-service-img{
	justify-self: right;
}
.grid-item-service-img img{
	width: 2.5rem;
	height: 2.3rem;
}
.grid-item-service-title{
	font-size: 1.1rem;
}
.grid-item-service-txt{
	grid-column: span 2;
	align-self: start;
	font-size: .8rem;
}